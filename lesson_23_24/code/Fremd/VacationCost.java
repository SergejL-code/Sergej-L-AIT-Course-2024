package Fremd;


       public class VacationCost {
            public static void main(String[] args) {

                // Мы создаем список марок машин
                String[] brand = {"Audi", "BMW", "Opel", "VW", "Mercedes"};

                // Список типов топлива: 'd' - дизель, 'b' - бензин
                char[] fuelTyp = {'d', 'b', 'd', 'd', 'b'};

                // Расход топлива для каждой машины на 100 км
                // Это означает, сколько литров топлива потратит машина на каждые 100 км
                double[] consumption = {6.6, 6.8, 6.9, 6.5, 6.3};

                // Стоимость аренды каждой машины на неделю
                double[] carRentalPrice = {45, 49, 45, 39, 49}; // в евро

                // Стоимость одного литра дизельного топлива и бензина
                double dieselCost = 1.6; // 1.6 евро за литр дизеля
                double benzinCost = 1.8; // 1.8 евро за литр бензина

                // Расстояние, которое мы планируем проехать — 3000 км
                int ROUTE = 3000;

                // Переменные для хранения минимальной стоимости и самой дешёвой машины
                // Сначала мы устанавливаем минимальную стоимость на максимальное возможное значение, чтобы потом её уменьшать
                double minCost = Double.MAX_VALUE;
                String nameOfCheapCar = ""; // Здесь мы запомним название самой дешёвой машины

                // Теперь начнем проверять каждую машину
                // Для этого мы используем цикл, чтобы пройти по всем машинам
                for (int i = 0; i < brand.length; i++) {
                    // Если тип топлива дизель ('d'), то используем стоимость дизеля, иначе — бензина
                    double fuelSelection = (fuelTyp[i] == 'd') ? dieselCost : benzinCost;

                    // Расчёт количества топлива, которое понадобится для поездки на 3000 км
                    // Мы делим расход топлива на 100, потому что в данных у нас расход на 100 км
                    // Умножаем это на 3000 км, чтобы узнать, сколько литров нужно для всей поездки
                    double amountOfLiters = (consumption[i] / 100) * ROUTE;

                    // Теперь рассчитываем стоимость топлива: сколько литров топлива умножаем на цену за литр
                    double totalFuelPrice = amountOfLiters* fuelSelection;

                    // Общая стоимость = стоимость аренды машины + стоимость топлива для поездки
                    double totalPreis = totalFuelPrice + carRentalPrice[i];

                    // Печатаем на экран общую стоимость для каждой машины
                    System.out.println(brand[i] + " total cost: " + totalPreis);

                    // Теперь проверяем, является ли эта машина самой дешёвой
                    // Если общая стоимость для этой машины меньше, чем минимальная стоимость,
                    // мы обновляем минимальную стоимость и запоминаем эту машину как самую дешёвую
                    if (totalPreis < minCost) {
                        minCost = totalPreis;
                        nameOfCheapCar = brand[i];
                    }
                }

                // После того как проверили все машины, выводим на экран самую дешёвую
                System.out.println("The cheapest car: " + nameOfCheapCar + " with total cost " + minCost);
            }
        }
